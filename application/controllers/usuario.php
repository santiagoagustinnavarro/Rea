<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

        

class Usuario extends CI_Controller
{
    public function __construct()
    {
        parent::__construct();
    }

   

    /*
     * Listar usuario
     */
    public function index()
    {
        $usuario = $this->Usuario_model->get_all_usuario();
        $this->load->view("header", ["title" => "Administrar usuarios"]);
        $this->load->view('usuario/index', ['usuario' => $usuario]);
        $this->load->view("footer");
    }

    /*
     * AÃ±adiendo a nuevo usuario
     */
    public function registro()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'clave' => hash('sha224', $this->input->post('clave')),
                //'clave2' => hash('sha224', $this->input->post('clave2')),
                'dni' => $this->input->post('dni'),
                'apellido' => $this->input->post('apellido'),
                'nombre' => $this->input->post('nombre'),
                'domicilio' => $this->input->post('domicilio'),
                'email' => $this->input->post('email'),
                'nombreUsuario' => $this->input->post('nombreUsuario'),
            );

            $insercion = $this->Usuario_model->add_usuario($params);
            if ($insercion) {
                $fecha = (getdate()["year"]) . "-" . (getdate()["mon"]) . "-" . (getdate()["mday"]);
                $hora = (getdate()["hours"]) . ":" . (getdate()["minutes"]) . ":" . (getdate()["seconds"]);
                $nombreEstadoUsuario = "pendiente";
                $nombreRol="Profesor";
                $nombreUsuario = $params["nombreUsuario"];
                $datosEstado = array("fechaInicio"=>$fecha,"hora"=>$hora,"nombreUsuario"=>$nombreUsuario,"nombreEstadoUsuario"=>$nombreEstadoUsuario);
                $datosRol=array("fechaInicio"=>$fecha,"nombreUsuario"=>$nombreUsuario,"nombreRol"=>$nombreRol);
                $insercionEstado = $this->Tenerusuario_model->add_tenerusuario($datosEstado);
                $insercionProfesor = $this->Tienerol_model->add_tienerol($datosRol);
                $this->load->view("header", ["title" => "Registro"]);
                $this->load->view('inicio/registrarse', array("mensaje" => '<div class="alert alert-success text-center"><h4>'."Registrado con exito".'</h4></div>'));
                $this->load->view("footer");
            } else {
                $this->load->view("header", ["title" => "Registro"]);
                $this->load->view('inicio/registrarse', array("mensaje" => '<div class="alert alert-info text-center"><h4>'."El usuario ya existe".'</h4></div>'));
                $this->load->view("footer");
            }
            // redirect('usuario/index');
        } else {
            $this->load->view("header", ["title" => "Registro"]);
            $this->load->view('inicio/registrarse');
            $this->load->view("footer");
        }
    }
    

    /*
     * Editando a un usuario
     */
    public function edit($nombreUsuario)
    {
        // check if the usuario exists before trying to edit it
        $data['usuario'] = $this->Usuario_model->get_usuario($nombreUsuario);
        if (isset($data['usuario']['nombreUsuario'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $estadoActual=$this->input->post('estadoActual');
                $rolActual=$this->input->post('rolActual');
                $rolNuevo=$this->input->post('nuevoRol');
                $estadoNuevo = $this->input->post('nuevoEstado');
                $actualizarEstado=$this->actualizarEstado($estadoActual, $estadoNuevo, $nombreUsuario);
                $actualizarRol=$this->actualizarRol($rolActual, $rolNuevo, $nombreUsuario);
                if (!$actualizarEstado) {
                    $this->load->view("header", ["title" => "Editar Usuario"]);
                    $this->load->view('usuario/edit', ['usuario'=>$data['usuario'],'mensaje'=>'Intente actualizar el estado mas tarde']);
                    $this->load->view("footer");
                } elseif (!$actualizarRol) {
                    $this->load->view("header", ["title" => "Editar Usuario"]);
                    $this->load->view('usuario/edit', ['usuario'=>$data['usuario'],'mensaje'=>'Intente actualizar el rol en 24 hs o elija un rol distinto']);
                    $this->load->view("footer");
                } else {
                    $this->load->view("header", ["title" => "Editar Usuario"]);
                    $this->load->view('usuario/edit', ['usuario'=>$data['usuario'],'mensaje'=>'Datos actualizados']);
                    $this->load->view("footer");
                }
            } else {
                $this->load->view("header", ["title" => "Editar Usuario"]);
                $this->load->view('usuario/edit', ['usuario'=>$data['usuario']]);
                $this->load->view("footer");
            }
        } else {
            show_error('The usuario you are trying to edit does not exist.');
        }
    }

    private function actualizarEstado($antiguoEst, $nuevoEst, $nombreUsuario)
    {
        $fechaActual=getdate()["year"]."-".getdate()["mon"]."-".getdate()["mday"];
        $horaActual=getdate()["hours"].":".getdate()["minutes"].":".getdate()["seconds"];
        $actualizacion=true;
        if ($antiguoEst!=$nuevoEst) {
            $params = array(
                    'nombreUsuario'=>$nombreUsuario,
                    'nombreEstadoUsuario'=>$nuevoEst,
                    'fechaInicio'=>$fechaActual,
                    'hora'=>$horaActual,
                );
            $setAntiguoEst=$this->Tenerusuario_model->update_tenerusuario(array('fechaFin'=>$fechaActual), array('nombreEstadoUsuario'=>$antiguoEst,'nombreUsuario'=>$nombreUsuario,'fechaFin'=>null));
            if ($setAntiguoEst) {
                $insertEstado=$this->Tenerusuario_model->add_tenerusuario($params);
                if (!$insertEstado) {
                    $this->Tenerusuario_model->update_tenerusuario(array('fechaFin'=>null), array('nombreEstadoUsuario'=>$antiguoEst,'','nombreUsuario'=>$nombreUsuario,'fechaFin'=>$fechaActual));
                    $actualizacion=false;
                }
            } else {
                $actualizacion=false;
            }
        }
        return $actualizacion;
    }
    private function actualizarRol($rolActual, $rolNuevo, $nombreUsuario)
    {
        $actualizacion=true;
        if ($rolActual!=$rolNuevo) {
            $fechaActual=getdate()["year"]."-".getdate()["mon"]."-".getdate()["mday"];
            $params = array(
                    'nombreUsuario'=>$nombreUsuario,
                    'nombreRol'=>$rolNuevo,
                    'fechaInicio'=>$fechaActual,
                );
            $actualiza= $this->Tienerol_model->update_tienerol(array('fechaFin'=>$fechaActual), array('nombreRol'=>$rolActual,'nombreUsuario'=>$nombreUsuario,'fechaFin'=>null));

            if ($actualiza) {
                $insertRol=$this->Tienerol_model->add_tienerol($params);
                if (!$insertRol) {
                    $this->Tienerol_model->update_tienerol(array('fechaFin'=>null), array('nombreRol'=>$rolActual,'nombreUsuario'=>$nombreUsuario,'fechaFin'=>$fechaActual));
                    $actualizacion=false;
                }
            } else {
                $actualizacion=false;
            }
        }
        return $actualizacion;
    }
    /*
     * Eliminar un usuario
     */
    public function remove($nombreUsuario)
    {
        $usuario = $this->Usuario_model->get_usuario($nombreUsuario);
        // check if the usuario exists before trying to delete it
        if (isset($usuario['nombreUsuario'])) {
            if ($this->Usuario_model->delete_usuario($usuario['nombreUsuario'])) {
            } else {
                echo "nop";
            };
        //redirect("usuario/index");
        } else {
            show_error('The usuario you are trying to delete does not exist.');
        }
    }
}
