<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Comentario extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Comentario_model');
        $this->load->helper("form");
        $this->load->library("session");
    } 

    /*
     * Listing of comentario
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('comentario/index?');
        $config['total_rows'] = $this->Comentario_model->get_all_comentario_count();
        $this->pagination->initialize($config);

        $data['comentario'] = $this->Comentario_model->get_all_comentario($params);
        
        $data['_view'] = 'comentario/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new comentario
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('idRecurso','IdRecurso','required|integer');
		$this->form_validation->set_rules('nombreUsuario','NombreUsuario','required|max_length[30]');
		$this->form_validation->set_rules('descripcion','Descripcion','required|max_length[80]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'idRecurso' => $this->input->post('idRecurso'),
				'nombreUsuario' => $this->input->post('nombreUsuario'),
				'descripcion' => $this->input->post('descripcion'),
				'fecha' => $this->input->post('fecha'),
				'hora' => $this->input->post('hora'),
            );
            
            $comentario_id = $this->Comentario_model->add_comentario($params);
            redirect('comentario/index');
        }
        else
        {            
            $data['_view'] = 'comentario/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a comentario
     */
    function edit($idComentario)
    {   
        // check if the comentario exists before trying to edit it
        $data['comentario'] = $this->Comentario_model->get_comentario($idComentario);
        
        if(isset($data['comentario']['idComentario']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('idRecurso','IdRecurso','required|integer');
			$this->form_validation->set_rules('nombreUsuario','NombreUsuario','required|max_length[30]');
			$this->form_validation->set_rules('descripcion','Descripcion','required|max_length[80]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'idRecurso' => $this->input->post('idRecurso'),
					'nombreUsuario' => $this->input->post('nombreUsuario'),
					'descripcion' => $this->input->post('descripcion'),
					'fecha' => $this->input->post('fecha'),
					'hora' => $this->input->post('hora'),
                );

                $this->Comentario_model->update_comentario($idComentario,$params);            
                redirect('comentario/index');
            }
            else
            {
                $data['_view'] = 'comentario/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The comentario you are trying to edit does not exist.');
    } 

    /*
     * Deleting comentario
     */
    function remove($idComentario)
    {
        $comentario = $this->Comentario_model->get_comentario($idComentario);

        // check if the comentario exists before trying to delete it
        if(isset($comentario['idComentario']))
        {
            $this->Comentario_model->delete_comentario($idComentario);
            redirect('comentario/index');
        }
        else
            show_error('The comentario you are trying to delete does not exist.');
    }

    function listar($idRecurso){
        $comentarios=$this->Comentario_model->get_all_comentario(array("idRecurso"=>$idRecurso));
    $this->load->model("Usuario_model");
    $arrUser=array();
    foreach($comentarios as $unComentario){
        $arrUser[]=$this->Usuario_model->get_usuario($unComentario["nombreUsuario"]);
    }
        $this->load->view("comentario/listar",["comentarios"=>$comentarios,"usuarios"=>$arrUser,"usuario"=>$this->session->nombreUsuario]);
    }
    
}
