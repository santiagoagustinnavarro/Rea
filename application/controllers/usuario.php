<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Usuario extends CI_Controller
{
    public function __construct()
    {
        parent::__construct();
        $this->load->model('Usuario_model');
    }

    /*
     * Listar usuario
     */
    public function index()
    {
        $usuario = $this->Usuario_model->get_all_usuario();
        $this->load->view("header", ["title" => "Administrar usuarios", 'usuario' => $usuario]);
        $this->load->view('usuario/index');
        $this->load->view("footer");
    }

    /*
     * AÃ±adiendo a nuevo usuario
     */
    public function registro()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
				'clave' => hash('sha224', $this->input->post('clave')),
				'clave2' => hash('sha224', $this->input->post('clave2')),
                'dni' => $this->input->post('dni'),
                'apellido' => $this->input->post('apellido'),
                'nombre' => $this->input->post('nombre'),
                'domicilio' => $this->input->post('domicilio'),
                'email' => $this->input->post('email'),
                'nombreUsuario' => $this->input->post('nombreUsuario'),
            );

            $insercion = $this->Usuario_model->add_usuario($params);
            if ($insercion) {
                $fecha = (getdate()["year"]) . "-" . (getdate()["mon"]) . "-" . (getdate()["mday"]);
                $hora = (getdate()["hours"]) . ":" . (getdate()["minutes"]) . ":" . (getdate()["seconds"]);
                $nombreEstadoUsuario = "pendiente";
                $nombreUsuario = $params["nombreUsuario"];
                $datos = array("fechaInicio"=>$fecha,"hora"=>$hora,"nombreUsuario"=>$nombreUsuario,"nombreEstadoUsuario"=>$nombreEstadoUsuario);
                $insercion = $this->Tenerusuario_model->add_tenerusuario($datos);
                // $estado=new Tenerusuario();
                if ($insercion) {
                    $this->load->view("header", ["title" => "Registro"]);
                    $this->load->view('inicio/registrarse', array("mensaje" => '<div class="alert alert-success text-center"><h4>'."Registrado con exito".'</h4></div>'));
                    $this->load->view("footer");
                }
            } else {
                $this->load->view("header", ["title" => "Registro"]);
                $this->load->view('inicio/registrarse', array("mensaje" => '<div class="alert alert-info text-center"><h4>'."El usuario ya existe".'</h4></div>'));
                $this->load->view("footer");
            }
            // redirect('usuario/index');
        } else {
            $this->load->view("header", ["title" => "Registro"]);
            $this->load->view('inicio/registrarse');
            $this->load->view("footer");
        }
    }
    

    /*
     * Editando a un usuario
     */
    public function edit($nombreUsuario)
    {
        // check if the usuario exists before trying to edit it
        $data['usuario'] = $this->Usuario_model->get_usuario($nombreUsuario);

        if (isset($data['usuario']['nombreUsuario'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
					'clave' => $this->input->post('clave'),
					'clave2' => $this->input->post('clave2'),
                    'dni' => $this->input->post('dni'),
                    'apellido' => $this->input->post('apellido'),
                    'nombre' => $this->input->post('nombre'),
                    'domicilio' => $this->input->post('domicilio'),
                    'email' => $this->input->post('email'),
                );

                $this->Usuario_model->update_usuario($nombreUsuario, $params);
                redirect('usuario/index');
            } else {
                
                $this->load->view("header", ["title" => "Editar Usuario"]);
                $this->load->view('usuario/edit',['usuario'=>$data['usuario']]);
                $this->load->view("footer");
            }
        } else {
            show_error('The usuario you are trying to edit does not exist.');
        }
    }

    /*
     * Eliminar un usuario
     */
    public function remove($nombreUsuario)
    {
        $usuario = $this->Usuario_model->get_usuario($nombreUsuario);

        // check if the usuario exists before trying to delete it
        if (isset($usuario['nombreUsuario'])) {
            if ($this->Usuario_model->delete_usuario($usuario['nombreUsuario'])) {
            } else {
                echo "nop";
            };
        //redirect("usuario/index");
        } else {
            show_error('The usuario you are trying to delete does not exist.');
        }
    }
}
